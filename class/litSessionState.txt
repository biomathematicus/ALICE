
/****** Object:  StoredProcedure [dbo].[litSessionState]    Script Date: 12/18/2017 05:28:21 PM ******/
/* SET ANSI_NULLS ON */
 
/* SET QUOTED_IDENTIFIER ON */
-- DROP FUNCTION litSessionState(varchar,varchar,varchar,varchar,varchar,integer);
CREATE OR REPLACE  FUNCTION litSessionState (
	p_Language        varchar(15) = null,
	p_OpusType        varchar(15) = null,
	p_PageCode        varchar(15) = null,
	p_PageName        varchar(25) = null,
	p_UserID			 varchar(70) = null,
	p_OpusID			 integer = null) RETURNS TABLE(lines text)
AS $$

DECLARE v_status text;
v_nm_nauta text;
v_id_nauta integer;

Begin

-- Create XML Table 
	Drop table IF EXISTS xml;
    Create Temp Table xml(id SERIAL PRIMARY KEY, lines TEXT);

	
-- Parameters
Insert Into xml (lines) Values ('<param>');
Insert Into xml (lines) Values ('<language>' || 
	(case when p_Language is null  then '' else p_Language end) || '</language>');
Insert Into xml (lines) Values ('<opus_type>' ||
	(case when p_OpusType is null  then '' else p_OpusType end) || '</opus_type>');
-- Page code is the page title in the database
Insert Into xml (lines) Values ('<page_code>' ||
	(case when p_PageCode is null  then '' else p_PageCode end) || '</page_code>');
-- User logon is the long user code generated by FORUMS
Insert Into xml (lines) Values ('<user_logon>' || 
	(case when p_UserID is null  then 'LOGGED-OFF' else p_UserID end) || '</user_logon>');  
-- Page name is the ASPX file name
Insert Into xml (lines) Values ('<page_name>' ||
	(case when p_PageName is null  then '' else p_PageName end) || '</page_name>');
Insert Into xml (lines) Values ('<id_opus>' ||
	(case when p_OpusID is null  then '' else rtrim(cast(p_OpusID as char(10))) end) || '</id_opus>');
-- USER INFORMATION
if p_UserID is not null and p_UserID <> ''  
	then

		--select cd_role into v_status from nauta where nauta.ds_login=p_UserID;
            
      v_status := (select 
			CASE TRIM(cd_role)  WHEN 'ADMIN' THEN '3'  
            WHEN  'READER' THEN '2'  
            WHEN  'TRANSLATOR' THEN '1'  
            WHEN  'AUTHOR' THEN '4'  
            WHEN  'UNIT' THEN '5'  
        END
		from 	nauta 
		where 	nauta.ds_login=p_UserID);
     

      select nauta.ds_login,id_nauta
      into v_nm_nauta,v_id_nauta
      from 	nauta 
      where nauta.ds_login=p_UserID;
     

        
		Insert Into xml (lines) Values ('<user_name>' || coalesce(v_nm_nauta,'') || '</user_name>');
		Insert Into xml (lines) Values ('<user_status>' || rtrim(cast(v_status  as char(20))) || '</user_status>');
	
		Insert Into xml (lines) Values ('<user_id>' || TRIM(cast(v_id_nauta as char(20)))|| '</user_id>');
else
		Insert Into xml (lines) Values ('<user_name></user_name>');
		Insert Into xml(lines)
			Select 	'<T_REGIS_WARNING><![CDATA[' || (case when ds_nuntius is null then '' else ds_nuntius end) || 
				']]></T_REGIS_WARNING>'
			from 	LINGUA_NUNTIUS 
			where 	cd_lingua = p_Language and 
				cd_nuntius = 'T_REGIS_WARNING';
	end if;
Insert Into xml (lines) Values ('</param>');


return query
	Select xml.lines From xml order by id; 

end;
$$ LANGUAGE plpgsql;